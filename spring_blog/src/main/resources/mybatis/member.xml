<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<select id="total" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM member
		<where>
			<if test="col=='mname'">
				mname LIKE '%'||#{word}||'%'
			</if>
			<if test="col=='email'">
				email LIKE '%'||#{word}||'%'
			</if>
			<if test="col=='id'">
				id LIKE '%'||#{word}||'%'
			</if>
		</where>
	</select>
	<select id="list" parameterType="Map" resultType="MemberDTO">
		SELECT id, mname, tel, email, zipcode, address1, address2, fname, r
		FROM(
			SELECT id, mname, tel, email, zipcode, address1, address2, fname, rownum r
			FROM(
				SELECT id, mname, tel, email, zipcode, address1, address2, fname
				FROM member
				<where>
					<if test="col=='mname'">
						mname like '%'||#{word}||'%'
					</if>
					<if test="col=='email'">
						email like '%'||#{word}||'%'
					</if>
					<if test="col=='id'">
						id like '%'||#{word}||'%'
					</if>
				</where>
				ORDER BY id ASC
				)
			)
		<![CDATA[
		WHERE r>=#{sno} and r<=#{eno}
		]]>
	</select>
	<select id="getFname" parameterType="String" resultType="String">
		SELECT fname FROM member
		WHERE id = #{id}
	</select>
	<delete id="delete" parameterType="String">
		DELETE member
		WHERE id = #{id}
	</delete>
	<update id="update" parameterType="MemberDTO">
		UPDATE member
		set 
		tel = #{tel},
		email = #{email},
		zipcode = #{zipcode},
		address1 = #{address1},
		address2 = #{address2},
		job = #{job}
		WHERE id = #{id}
	</update>
	<update id="updatePw" parameterType="Map">
		UPDATE member
		set passwd = #{passwd}
		WHERE id = #{id}
	</update>
	<update id="updateFile" parameterType="Map">
		UPDATE member
		set fname = #{fname}
		WHERE id = #{id}
	</update>
	<select id="read" parameterType="String" resultType="MemberDTO">
		SELECT id, mname, tel, email, zipcode, address1, address2, job, mdate, fname
		FROM member
		WHERE id = #{id}
	</select>
	<select id="duplicateEmail" parameterType="String" resultType="int">
		SELECT COUNT(email)
		FROM member
		WHERE email = #{email}
	</select>
	<select id="duplicateId" parameterType="String" resultType="int">
		SELECT COUNT(id)
		FROM member
		WHERE id = #{id}
	</select>
	<insert id="create" parameterType="MemberDTO">
		INSERT INTO member(id, passwd, mname, tel, email, zipcode, address1, address2, job, mdate, fname, grade)
		VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode}, #{address1}, #{address2}, #{job}, sysdate, #{fname}, 'H')
	</insert>
	<select id="getGrade" parameterType="String" resultType="String">
		SELECT
		grade FROM member
		WHERE id = #{id}
	</select>
	<select id="loginCheck" parameterType="Map" resultType="int">
		SELECT
		COUNT(*) FROM member
		WHERE id = #{id} AND passwd = #{pw}
	</select>
</mapper>